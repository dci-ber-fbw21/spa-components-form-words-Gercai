{"ast":null,"code":"var _jsxFileName = \"/home/dci-student/Dev/practice/jscript/react/april/spa-components-form-words-Gercai/src/components/form/index.js\";\nimport React from 'react';\nimport './index.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: [],\n      currentWord: \"\",\n      errorMessage: \"invisible\",\n      resultMessage: \"invisible\",\n      form: \"\"\n    };\n    this.wordList = [];\n    this.count = 0;\n    this.handleEnter = this.handleEnter.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.increaseCount = this.increaseCount.bind(this);\n    this.setCurrentWord = this.setCurrentWord.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  handleEnter() {\n    let word = document.querySelector(\".field\").value;\n    document.querySelector(\".field\").value = \"\";\n    this.wordList.push(word);\n    this.setState({\n      words: this.wordList\n    });\n  }\n\n  increaseCount() {\n    this.count >= this.state.words.length ? this.count = 0 : this.count++;\n  }\n\n  setCurrentWord() {\n    this.setState({\n      currentWord: this.state.words[this.state.count],\n      count: this.count\n    });\n  } //    Mount\n\n\n  handleShow() {\n    if (this.state.words.length < 3) {\n      this.setState({\n        currentWord: \"Expected at least 3 words or more\",\n        errorMessage: \"visible\"\n      });\n    } // Success\n    else {\n        this.setState({\n          resultMessage: \"visible\",\n          errorMessage: \"invisible\",\n          form: \"invisible\"\n        });\n        setInterval(() => {\n          this.setCurrentWord();\n          this.increaseCount();\n        }, 1000);\n      }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: this.state.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"upper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"word\",\n      className: \"field\",\n      name: \"word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      for: \"word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Words\")), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Show\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleEnter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"Enter\"))), /*#__PURE__*/React.createElement(\"section\", {\n      name: \"result\",\n      className: this.state.resultMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"article\", {\n      className: \"result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"I am a\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \" \", this.state.currentWord, \" \"))), /*#__PURE__*/React.createElement(\"section\", {\n      name: \"Errmsg\",\n      className: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, this.state.currentWord));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/dci-student/Dev/practice/jscript/react/april/spa-components-form-words-Gercai/src/components/form/index.js"],"names":["React","Form","Component","constructor","props","state","words","currentWord","errorMessage","resultMessage","form","wordList","count","handleEnter","bind","handleShow","increaseCount","setCurrentWord","componentWillUnmount","clearInterval","timer","word","document","querySelector","value","push","setState","length","setInterval","handleSubmit","event","preventDefault","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nclass Form extends React.Component{\n \n    constructor(props){\n\n        super(props);\n\n        this.state = {\n            words: [],\n            currentWord: \"\",\n            errorMessage: \"invisible\",\n            resultMessage: \"invisible\",\n            form: \"\"\n        }\n\n        this.wordList = [];\n        this.count = 0;\n\n        this.handleEnter = this.handleEnter.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n        this.increaseCount = this.increaseCount.bind(this);\n        this.setCurrentWord = this.setCurrentWord.bind(this);\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n\n    handleEnter(){\n        let word = document.querySelector(\".field\").value;\n        document.querySelector(\".field\").value = \"\";\n        this.wordList.push(word);\n        this.setState({\n            words: this.wordList\n        })\n   }\n\n   increaseCount(){\n        this.count>=this.state.words.length?this.count=0:this.count++;\n   }\n\n   setCurrentWord(){\n    this.setState({\n        currentWord: this.state.words[this.state.count],\n        count: this.count\n    })\n   }\n\n//    Mount\n    handleShow(){\n\n        if(this.state.words.length < 3){\n            this.setState({\n                currentWord: \"Expected at least 3 words or more\",\n                errorMessage: \"visible\"\n            })\n\n        }\n        // Success\n        else{\n            this.setState({\n                resultMessage: \"visible\",\n                errorMessage: \"invisible\",\n                form: \"invisible\"\n            })\n\n            setInterval(() => {\n                this.setCurrentWord();\n                this.increaseCount();\n               },1000);\n        }\n    }   \n\n    handleSubmit(event){\n        event.preventDefault();\n    }\n\n    render(){\n\n    return (\n        <article className=\"box\">\n            \n            <form onSubmit={this.handleSubmit} className={this.state.form}>\n\n            <fieldset className=\"upper\">\n              \n            <input id=\"word\" className=\"field\" name=\"word\"></input>\n               \n\n            <h3 for=\"word\">Words</h3>\n                \n            </fieldset>\n\n            <fieldset>\n            <button onClick={this.handleShow}>Show</button>\n            <button onClick={this.handleEnter}>Enter</button>\n            </fieldset>\n\n            </form>\n\n            <section name=\"result\" className={this.state.resultMessage}>\n                {/* Inner Result */}\n                <article className=\"result\">\n            I am a  \n            <span className={\"word\"}> {this.state.currentWord} </span>\n                </article>\n\n            </section>\n\n            <section name=\"Errmsg\" className={this.state.errorMessage}>\n            {this.state.currentWord}\n            </section>\n\n        </article>\n      );\n\n    }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}